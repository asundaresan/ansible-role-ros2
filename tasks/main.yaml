---
- name: set locale
  locale_gen: name="{{ locale }}" state=present

- name: add ROS repository key
  apt_key:
    keyserver: "{{ ros_apt_keyserver }}"
    id: 421C365BD9FF1F717815A3895523BAEEB01FA116
    state: present

- name: add ROS repository
  apt_repository:
    repo: "deb {{ ros_apt_package_uri }} {{ ansible_lsb.codename }} main"
    state: present
    update_cache: yes

- name: add OSRF repository key
  apt_key:
    keyserver: "{{ ros_apt_keyserver }}"
    id: D2486D2DD83DB69272AFE98867170598AF249743 
    state: present

- name: add OSRF repository
  apt_repository:
    repo: "deb {{ osrf_apt_package_uri }} {{ ansible_lsb.codename }} main"
    state: present
    update_cache: yes

- name: install git and wget 
  apt: name={{ item }} state=present
  with_items:
    - wget
    - git 

- name: install build essentials
  apt: name={{ item }} state=present
  with_items:
    - build-essential 
    - cppcheck 
    - cmake 
    - libopencv-dev 
    - python-empy 
    - python3-dev 
    - python3-empy 
    - python3-nose 
    - python3-pip 
    - python3-setuptools 
    - python3-vcstool

- name: install dependencies for testing
  apt: name={{ item }} state=present
  with_items:
    - clang-format 
    - pydocstyle 
    - pyflakes 
    - python3-coverage 
    - python3-mock 
    - python3-pep8 
    - uncrustify

- name: install dependencies for fastrtps
  apt: name={{ item }} state=present
  with_items:
    - libboost-chrono-dev 
    - libboost-date-time-dev 
    - libboost-program-options-dev 
    - libboost-regex-dev 
    - libboost-system-dev 
    - libboost-thread-dev


- name: install DDS implementation
  apt: name={{ item }} state=present
  with_items:
    - libopensplice64

#- name: get ROS 2.0 source code
#  script: scripts/get_ros2.sh

